# Dependencies
- import_playbook: install_filesystems.yml

- hosts: localhost
  gather_facts: yes

  vars:
    - my_name: "Cockpit"
    - my_file: "install_cockpit"
    - my_service: "cockpit"

    - my_packages:
      - gnupg
      - aria2

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml
    
  - name: "{{ my_name }} - install prerequisite packages"
    package:
       name: "{{ my_packages }}"
       state: latest

#  - name: "{{ my_name }} - Install Debian Signing Keys 1"
#    shell: "/usr/bin/apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138"
#
#  - name: "{{ my_name }} - Install Debian Signing Keys 2"
#    shell: "/usr/bin/apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9"

  - name: "{{ my_name }} - download Debian signing keys"
    shell:
      chdir: "/tmp"
      cmd: "aria2c --allow-overwrite=true http://ftp.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2021.1.1_all.deb https://mirror.aarnet.edu.au/pub/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2021.1.1_all.deb"
    when: ansible_distribution == "Debian"

  - name: "{{ my_name }} - install Debian signing keys"
    shell:
      chdir: "/tmp"
      cmd: "dpkg -i debian-archive-keyring*.deb"
    when: ansible_distribution == "Debian"

  - name: "{{ my_name }} - Configure APT repo"
    apt_repository:
      repo: deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main contrib non-free
      state: present
      filename: debian-backports
      update_cache: no
    when: ansible_distribution == "Debian"

  - name: "{{ my_name }} - Configure APT repo for Ubuntu x86_64"
    apt_repository:
      repo: deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-backports main restricted universe multiverse
      state: present
      filename: "{{ ansible_distribution_release }}-backports"
      update_cache: no
    when: ansible_distribution == "Ubuntu" and
          ansible_architecture == "x86_64"

  - name: "{{ my_name }} - Configure APT repo for Ubuntu non x86_64 (ports)"
    apt_repository:
      repo: deb http://ports.ubuntu.com/ {{ ansible_distribution_release }}-backports main restricted universe multiverse
      state: present
      filename: "{{ ansible_distribution_release }}-backports"
      update_cache: no
    when: ansible_distribution == "Ubuntu" and
          ansible_architecture != "x86_64"

  - name: "{{ my_name }} - Force update repo cache"
    shell:
      cmd: "/usr/bin/apt update || exit 0"
    when: ansible_distribution == "Ubuntu" or
          ansible_distribution == "Debian"

  - name: "{{ my_name }} - Install from repo"
    apt:
       name: "{{ item }}"
       state: latest
       default_release: "{{ ansible_distribution_release }}-backports"
    with_items:
      - cockpit
      - cockpit-storaged
      - cockpit-networkmanager
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    service:
      name: "{{ my_service }}"
      state: started
      enabled: yes
      daemon_reload: yes

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ my_service }}"
      state: restarted
      daemon_reload: yes

- import_playbook: retronas_system_config.yml
  vars:
    module_name: "cockpit"
    module_state: "present"