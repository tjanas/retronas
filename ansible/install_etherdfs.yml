- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "EtherDFS"
    - my_file: "install_etherdfs"

    - my_packages:
      - make
      - automake
      - autoconf
      - gcc
      - g++
      - git
      - build-essential
      - coreutils

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install build tools"
    package:
       name: "{{ my_packages }}"
       state: latest

  - name: "{{ my_name }} - create MS-DOS directory"
    file:
      path: "{{ retronas_path }}/dos"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      mode: "0775"
      state: directory

  - name: "{{ my_name }} - Generate install scripts"
    template:
      src: "templates/{{ my_file }}/{{ my_file }}.sh.j2"
      dest: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      owner: root
      group: root
      mode: 0755

  - name: "{{ my_name }} - Install from source code"
    shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "{{ retronas_root }}/bin/ethersrv"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - create startup service"
    template:
      src: templates/{{ my_file }}/etherdfs.service.j2
      dest: /usr/lib/systemd/system/etherdfs.service
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup service"
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
      daemon_reload: yes
    with_items:
      - etherdfs

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - etherdfs

    
- import_playbook: retronas_system_config.yml
  vars:
    module_name: "etherdfs"
    module_state: "present"